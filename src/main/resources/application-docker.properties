# Docker Environment Configuration
spring.application.name=resource-management
server.port=8080

# Database - Docker service names - BATCH OPTIMIZATION ADDED
spring.datasource.url=jdbc:postgresql://postgres:5432/resource_db?reWriteBatchedInserts=true&rewriteBatchedStatements=true
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection pool optimization for batch processing
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000

# JPA
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false

# Flyway
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Kafka - Docker service name
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
kafka.topic.resource-events=resource-events

# Logging
logging.level.root=INFO
logging.level.com.energia.resourcemanagement=INFO

# Swagger
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Hibernate batch processing
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.generate_statistics=false

# Enable JDBC batch processing
#spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true